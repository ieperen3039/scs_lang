input_string // String
    split_on("\n") // String[]
    > split_on(" ") // String[][2]
    = elements;

elements // String[][2]
    > (str) { // String[2]
        str
            first() // String?
            else("") // String
            = your_shape;

        str
            last() // String?
            else("") // String
            = oppo_shape;

        [your_shape, oppo_shape] // construct tuple (SCP_5)
            match { // SCP_6
                ["A",  "X"] : 3, // 1 - 1 + 3
                ["A",  "Y"] : -1, // 1 - 2 + 0
                ["A",  "Z"] : 4, // 1 - 3 + 6
                ["B",  "X"] : 1, // 2 - 1 + 0
                ["B",  "Y"] : 3, // 2 - 2 + 3
                ["B",  "Z"] : 5, // 2 - 3 + 6
                ["C",  "X"] : 10, // 3 - 1 + 6
                ["C",  "Y"] : 1, // 3 - 2 + 0
                ["C",  "Z"] : 3, // 3 - 3 + 3
                default : 0
            } // int
    } // int[]
    reduce(int.add) // int